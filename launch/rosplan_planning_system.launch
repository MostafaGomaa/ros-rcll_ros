<?xml version="1.0"?>

<launch>
	<arg name="pddl_domain_path" />
	<arg name="popf_anytime" default="true" />

	<!-- domain file -->
	<param name="/rosplan/domain_path" value="$(arg pddl_domain_path)" />

	<!-- knowledge base -->
	<node name="rosplan_knowledge_base" pkg="rosplan_knowledge_base" type="knowledgeBase" respawn="false" output="screen">
	</node>

	<!-- scene database (MongoDB) -->
	<param name="mongodb_host" value="localhost" />
	<param name="mongodb_port" value="27018" />
	<node name="rosplan_scene_database" pkg="mongodb_store" type="mongodb_server.py" respawn="false" output="log">
		<param name="database_path" value="$(find rosplan_knowledge_base)/common/mongoDB/" />
	</node>
	<node name="rosplan_scene_message_store" pkg="mongodb_store" type="message_store_node.py" respawn="false" output="log" />

	<!-- planning system -->
	<node name="rosplan_planning_system" pkg="rosplan_planning_system" type="planner" respawn="false" output="screen">
		<!-- directory for generated files -->
		<param name="data_path" value="$(find rcll_ros)/data/" />
		<param name="problem_path" value="$(find rcll_ros)/data/problem.pddl" />
		<param name="strl_file_path" value="$(find rcll_ros)/data/plan.strl" />

		<!-- the following configures the popf any-time version to
		     optimize for a given time. This has the advantage of allowing
		     for more time to find a higher quality solution. The
		     drawbacks are that it fails to find a plan if that is not
		     possible within the given time limit and that if will always
		     use the given time even though the plan quality does not
		     improve further.  You may disable this with the other
		     "non-timeout" command without the "-n" flag to popf.
		-->
		<param name="planner_command" value="$(find rosplan_planning_system)/common/bin/popf DOMAIN PROBLEM"
		       if="$(arg popf_anytime)"/>
		<param name="planner_command" value="timeout 30 $(find rosplan_planning_system)/common/bin/popf -n DOMAIN PROBLEM"
		       unless="$(arg popf_anytime)"/>
		<param name="generate_default_problem" value="true" />
		<param name="max_dispatch_attempts" value="2" />
	</node>

</launch>
